@page "/listitem"
@using ChallengeApp.Models

<div class="item-container">
    <div class="header">
        <div>
            <h1>Opção 10</h1>
            <span class="mandatory-text">* Campos de preenchimento obrigatório</span>
        </div>
        
        <div class="navigation-buttons">
            <div>
                <button class="nav-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
                    </svg>
                </button>
                <span>Anterior</span>
            </div>
            <div>
                <span>Seguinte</span>
                <button class="nav-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <div class="form-section">
        <h2>Tipo de taxa</h2>
        <label>Adicionar tipo de taxa</label>
        <select class="select-box">
            <option>Selecionar</option>
        </select>
    </div>

    <div class="form-section">
        <h2>Contar *</h2>
        <div class="radio-labels">
            <label><input type="radio" name="contar" checked> Sim</label>
            <label><input type="radio" name="contar"> Não</label>       
        </div>
    </div>

    <div class="form-section">
        <h2>Taxa *</h2>
        <div class="tax-control">
            <label>Adicionar taxa por localização</label>
            <label class="switch">
                <input type="checkbox" checked>
                <span class="slider"></span>
            </label>
            <button class="btn custom-btn ml-auto">+ Adicionar Taxa</button>
        </div>

        <div class="tax-table">
            <div class="table-row header">
                <div><input type="checkbox" @onchange="ToggleSelectAll" /></div>
                <div>NUTS II</div>
                <div>NUTS III</div>
                <div>Concelho</div>
                <div>Taxa (%)</div>
                <div></div>
            </div>

            @foreach (var row in taxRows)
            {
                <div class="table-row">
                    <div><input type="checkbox" @bind="row.IsSelected" /></div>
                    <div>@row.Region</div>
                    <div>@row.SubRegion</div>
                    <div>@row.City</div>
                    <div>@row.Rate %</div>
                    <div><button class="delete-btn" @onclick="() => RemoveRow(row)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                        </svg>
                    </button></div>
                </div>
            }
        </div>

        <div class="pagination-container">
            <span>1 de 2 páginas (23 itens)</span>
            <select class="items-per-page">
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="30">30</option>
            </select>
            <span>itens por página</span>

            <!-- Pagination Buttons -->
            <div class="pagination-buttons">
                <button class="pagination-btn">&laquo;</button>
                <button class="pagination-btn active">1</button>
                <button class="pagination-btn">2</button>
                <button class="pagination-btn">&raquo;</button>
            </div>
        </div>

        @if (IsAnyRowSelected)
        {
            <div class="actions">
                <button class="delete-selected-btn" @onclick="DeleteSelected">Delete Selected</button>
                <button class="cancel-btn" @onclick="CancelSelection">Cancel</button>
            </div>
        }
    </div>
</div>

@code {
    private bool selectAll = false;
    private List<TaxRow> taxRows = new List<TaxRow>
    {
        new TaxRow { Id = 1, Region = "Norte", SubRegion = "Ave", City = "Fafe", Rate = 25, IsSelected = false },
        new TaxRow { Id = 2, Region = "Norte", SubRegion = "Área Metropolitana do Porto", City = "Matosinhos", Rate = 75, IsSelected = false }
    };

    private void ToggleSelectAll(ChangeEventArgs e)
    {
        selectAll = !selectAll;
        // Update each row's IsSelected property based on selectAll value
        foreach (var row in taxRows)
        {
            row.IsSelected = selectAll;
        }
        StateHasChanged(); // Refresh the UI
    }

    private void RemoveRow(TaxRow row)
    {
        taxRows.Remove(row);
        StateHasChanged(); // Ensure UI refresh after row deletion
    }

    private void DeleteSelected()
    {
        taxRows = taxRows.Where(row => !row.IsSelected).ToList();
        selectAll = false; // Reset "Select All" checkbox
        StateHasChanged(); // Refresh the UI after deletion
    }

    private void CancelSelection()
    {
        selectAll = false;
        foreach (var row in taxRows)
        {
            row.IsSelected = false;
        }
        StateHasChanged(); // Refresh the UI after canceling selection
    }

    private bool IsAnyRowSelected => taxRows.Any(row => row.IsSelected);
}

<style>
.item-container {
    margin: 1rem 3rem;
    font-family: Arial, sans-serif;
    flex: 8;
}

@@media (min-width: 992px) {
    .item-container {
        margin: 3rem;
        font-family: Arial, sans-serif;
        flex: 8;
    }
}

.header {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.header h1 {
    font-size: 24px;
    font-weight: 600;
    color: #333;
}

.mandatory-text {
    color: #6d5bcf;
    font-size: 14px;
}

.navigation-buttons {
    display: flex;
    gap: 16px;
}

.nav-btn {
    background-color: #f6f4ff;
    color: #6d5bcf;
    padding: 4px 5px;
    border: none;
    border-radius: 20px;
    cursor: pointer;
    transition: 0.3ms;
    margin: 0rem 0.5rem;
    line-height: 15px;
    border: 1px solid #c5c5c5;
}

.nav-btn:hover {
    background-color: #6d5bcf;
    color: #f6f4ff;
}

.form-section {
    background-color: white;
    padding: 16px;
    margin-top: 16px;
    border-radius: 8px;
    box-shadow: 0px 0px 8px rgb(0 0 0 / 10%);
}

.form-section h2 {
    font-size: 16px;
    font-weight: 500;
    margin-bottom: 8px;
    color: #777777;
}

.select-box {
    padding: 8px;
    font-size: 14px;
    border-radius: 4px;
    border: 1px solid #ddd;
}

.tax-control {
    display: flex;
    flex-direction: column;
}

@@media (min-width: 540px) {
    .tax-control {
        display: flex;
        flex-direction: row;
    }
}

@@media (min-width: 540px) {
    .tax-control button {
        margin-left: auto;
    }
}

.radio-labels {
    display: flex;
    column-gap: 1rem;
}

label {
    display: flex;
    align-items: center;
    margin: 8px 0;
    font-size: 14px;
}

input[type="radio"] {
    margin-right: 8px;
    accent-color: #6d5bcf;
}

.switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 20px;
    margin: 0rem 0 1rem 0.5rem;
}

@@media (min-width: 540px) {
    .switch {
        margin: 0.4rem 0 0 0.5rem;
    }
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #f6f4ff;
    transition: 0.4s;
    border-radius: 20px;
    height: 25px;
    width: 45px;
    border: 1px solid #c5c5c5;
}

.slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    bottom: 3px;
    background-color: #c0c0c0;
    transition: 0.4s;
    border-radius: 50%;
}

input:checked + .slider:before {
    transform: translateX(20px);
    background-color: #6d5bcf;
}

.tax-table {
    width: 100%;
    margin: 1rem 0;
}

.table-row {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem;
    border: solid 1px #e8e8e8;
    border-radius: 5px;
    background-color: #f6f4ff;
    margin: 0.2rem;
}

.table-row:first-child {
    flex: 1;
}


.table-row.header {
    font-weight: 600;
    color: #999999;
    background-color: #ffffff;
    border: none;
}

.table-row div {
    flex: 2;
    display: flex;
    align-items: center;
    font-size: 14px;
    margin: 0 0.5rem;
    word-break: break-word;
}

.table-row div:last-child {
    justify-content: right;
}

.delete-btn {
    background-color: #fff;
    color: #6d5bcf;
    padding: 0.2rem 0.4rem;
    border: 1px solid #c5c5c5;
    border-radius: 0.2rem;
    transition: 0.3ms;
}

.delete-btn:hover {
    background-color: #6d5bcf;
    color: #fff;
    cursor: pointer;
    padding: 0.2rem 0.4rem;
    border: 1px solid #6d5bcf;
}

input[type="checkbox"] {
    transform: scale(1.5);
    accent-color: #6d5bcf;
}

.pagination-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px;
    font-size: 14px;
    color: #666;
}

.items-per-page {
    font-size: 14px;
    padding: 4px;
    margin: 0 8px;
}

.pagination-buttons {
    display: flex;
    align-items: center;
}

.pagination-btn {
    border: none;
    background-color: transparent;
    color: #666;
    padding: 5px 10px;
    cursor: pointer;
}

.pagination-btn.active {
    color: #6200ea;
    font-weight: bold;
}

.pagination-btn:hover {
    color: #6200ea;
}

</style>